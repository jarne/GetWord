version: 2

jobs:
    phpunit:
        docker:
            - image: cimg/php:8.1-node
        steps:
            # Checkout branch
            - checkout

            # Manually install PHP extensions
            - run: |
                  sudo pecl install xdebug

            # Install Composer dependencies
            - restore_cache:
                  key: composer-{{ checksum "composer.json" }}
            - run: composer install
            - save_cache:
                  key: composer-{{ checksum "composer.json" }}
                  paths:
                      - vendor

            # Run tests with PHPUnit
            - run: XDEBUG_MODE=coverage php vendor/bin/phpunit --log-junit test-results/phpunit/junit.xml --coverage-html coverage/coverage-report

            # Save test results
            - store_test_results:
                  path: test-results

            # Save coverage report
            - store_artifacts:
                  path: coverage/coverage-report
    phpstan:
        docker:
            - image: cimg/php:8.1
        steps:
            # Checkout branch
            - checkout

            # Install Composer dependencies
            - restore_cache:
                  key: composer-{{ checksum "composer.json" }}
            - run: composer install --ignore-platform-reqs
            - save_cache:
                  key: composer-{{ checksum "composer.json" }}
                  paths:
                      - vendor

            # Create result folder
            - run: mkdir -p test-results/phpstan-result

            # Run code analysis with PHPStan
            - run: composer code-analyze-save-report

            # Save code analysis results
            - store_test_results:
                  path: test-results
    phpcs:
        docker:
            - image: cimg/php:8.1
        steps:
            # Checkout branch
            - checkout

            # Install Composer dependencies
            - restore_cache:
                  key: composer-{{ checksum "composer.json" }}
            - run: composer install --ignore-platform-reqs
            - save_cache:
                  key: composer-{{ checksum "composer.json" }}
                  paths:
                      - vendor

            # Create result folder
            - run: mkdir -p test-results/phpcs-result

            # Run code style check with PHP_CodeSniffer
            - run: composer check-format-save-report

            # Save code style check results
            - store_test_results:
                  path: test-results

workflows:
    version: 2
    tests:
        jobs:
            - phpunit
            - phpstan
            - phpcs
